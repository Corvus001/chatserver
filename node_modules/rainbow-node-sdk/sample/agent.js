// agent.js
// =============================================================================
// init

"use strict";

var RainbowSDK = require("../index.js");

// LOGGER
var winston = require("winston");
var logger = new winston.Logger({
  transports: [new(winston.transports.Console)()]
});

let options = {
  "rainbow": {
    "host": "vincent.openrainbow.org", // Can be "sandbox" (developer platform), "official" or any other hostname when using dedicated AIO
  },
  "credentials": {
    "login": "alice@pgu.test.openrainbow.net", // The Rainbow email account to use
    "password": "alice" // The Rainbow associated password to use
  },
  // Application identifier
  "application": {
    "appID": "5a1bc05c016f1e01cf61d060", // The Rainbow Application Identifier - application must have a 'deployed' state
    "appSecret": "w3EZyfegs9N1o6u1NAGpRcBg", // The Rainbow Application Secret - retrieved from developer hub
  },
  // Logs options
  "logs": {
    "enableConsoleLogs": true, // Default: true
    "enableFileLogs": false, // Default: false
    "file": {
      "path": "/var/tmp/rainbowsdk/", // Default path used
      "level": "debug" // Default log level used
    }
  },
    // Proxy configuration
 /*   "proxy": {
        "host": "192.168.254.49",
        "port": 8080,
        "http": "http"
    },*/
  // IM options
  "im": {
    "sendReadReceipt": true // True to send the 'read' receipt automatically
  }
};

// instantiate the SDK
var rainbowSDK = new RainbowSDK(options);

// start the SDK
rainbowSDK.start();

// =============================================================================
// =============================================================================
// =============================================================================
// SEND PART

var sendResponse = function (message, idUser, lang, content, subject) {
  var messageSent = rainbowSDK
    .im
    .sendMessageToJid(message.response, idUser, lang, content, subject);
};

// =============================================================================
// =============================================================================
// =============================================================================
// RECEIVE PART

rainbowSDK
  .events
  .on("rainbow_onmessagereceived", function (message) {
    logger.log(message);
    if (message.event && ["leave", "close"].indexOf(message.event) >= 0) {
      return;
    }

    if( message.content === 'md' ) {
        sendResponse({
          response: "nothing"
        }, message.fromJid, "en", {
          "message": "### Test\n\n" +
          "| Titre 1       |     Titre 2     |   Titre 3      |"+
      "| ------------- | -------------   | ---------      |"+
      "| Colonne       |     Colonne     |      Colonne   |"+
      "| Alignée à     |      Alignée au |     Alignée à  |" +
      "| Gauche        |      Centre     |      Droite    |"

    }, "My subject");
  };
    
    if ( ["online", "away", "dnd", "invisible"].indexOf(message.content) > -1 ) {
        rainbowSDK.presence.setPresenceTo(message.content);
        console.log("Settings updated to : " + message.content);
    };
/*
    let bubbleList = rainbowSDK
      .bubbles
      .createBubble(`My bubble ${Date.now().toString()}`, "desc", false)
      .then((bubble) => {

        sendResponse({
          response: `bubbles: ${bubble.name} => Created !`
        }, message.fromJid, message.lang);
      });
      */

  });
